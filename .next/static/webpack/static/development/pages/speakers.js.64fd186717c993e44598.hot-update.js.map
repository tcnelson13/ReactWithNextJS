{"version":3,"file":"static/webpack/static/development/pages/speakers.js.64fd186717c993e44598.hot-update.js","sources":["webpack:///./pages/speakers.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport SpeakerCard from '../src/SpeakerCard';\n\nimport getConfig from 'next/config';\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig();\n\nclass Speakers extends React.Component {\n    static GetSpeakersUrl() {\n        if (process.env.NODE_ENV === \"production\") {\n            return process.env.RESTURL_SPEAKERS_PROD\n                || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n        } else {\n            return process.env.RESTURL_SPEAKERS_DEV;\n        }\n    }\n\n    static async getInitialProps({ req }) {\n        // REST calls using json-server\n        const isServer = !!req;\n        console.log('isServer: ', isServer);\n        if (isServer) {\n            var promise = axios.get(Speakers.GetSpeakersUrl()).then(response => {\n                return {\n                    isLoading: false,\n                    hasErrored: false,\n                    speakerData: response.data\n                };\n            })\n                .catch(error => {\n                    return {\n                        hasErrored: true,\n                        messaage: error.message\n                    }\n                });\n            return promise;\n        }\n        else {\n            console.log('are we here');\n            return {\n                speakerData: [...Array(5)].map((_, i) => ({\n                    firstName: \"\",\n                    lastName: \"\",\n                    id: i\n                })),\n                isLoading: true\n            };\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        // Initializing state to axios call to db.json result data\n        this.state = {\n            isLoading: props.isLoading,\n            hasErrored: props.hasErrored,\n            message: props.message,\n            speakerData: props.speakerData\n        }\n        // console.log(props.speakerData);\n    }\n\n    componentDidMount() {\n        axios\n            .get(Speakers.GetSpeakersUrl())\n            .then((response => {\n                this.setState({\n                    hasErrored: false,\n                    isLoading: false,\n                    speakerData: response.data\n                });\n            }))\n            .catch((error) => {\n                this.setState({\n                    hasErrored: true,\n                    isLoading: false,\n                    speakerData: []\n                });\n            });\n    }\n\n    render() {\n        // console.log('isLoading: ', this.state.isLoading);\n        // if (this.state.isLoading) {\n        //     return <div>...is Loading</div>\n        // }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.speakerData.map((speaker) =>\n                            <div className=\"card col-4 cardmin margintopbotton20\" key={speaker.id}>\n                                <SpeakerCard isLoading={this.props.isLoading} speaker={speaker} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Speakers;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;;AACA;AACA,mBAGA;AACA;AACA;AACA;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AANA;AACA;;;;;;;;;;AAUA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAJA;AAUA;AACA;;;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AASA;;;;AA7FA;AACA;AA6FA;AAEA;;;;A","sourceRoot":""}