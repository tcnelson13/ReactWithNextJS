{"ast":null,"code":"var _jsxFileName = \"/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/sessions.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SessionCard from '../src/SessionCard';\nimport getConfig from 'next/config';\nconst {\n  serverRuntimeConfig,\n  publicRuntimeConfig\n} = getConfig(); // M4.6\n\nclass Session extends Component {\n  static GetSessionsUrl() {\n    if (false) {\n      return process.env.RESTURL_SESSIONS_PROD || publicRuntimeConfig.RESTURL_SESSIONS_PROD;\n    } else {\n      return process.env.RESTURL_SESSIONS_DEV;\n    }\n  }\n\n  static async getInitialProps() {\n    // REST calls using json-server\n    var promise = axios.get(Session.GetSessionsUrl()).then(response => {\n      return {\n        hasErrored: false,\n        sessionData: response.data\n      };\n    }).catch(error => {\n      return {\n        hasErrored: true,\n        messaage: error.message\n      };\n    });\n    return promise;\n  }\n\n  constructor(props) {\n    super(props); // Initializing state to axios call to db.json result data\n\n    this.state = {\n      hasErrored: props.hasErrored,\n      message: props.message,\n      sessionData: props.sessionData\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"card-deck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, this.state.sessionData.map(session => __jsx(\"div\", {\n      className: \"card col-4 cardmin margintopbottom\",\n      key: session.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }\n    }, __jsx(SessionCard, {\n      session: session,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\n;\nexport default Session;","map":{"version":3,"sources":["/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/sessions.js"],"names":["React","Component","axios","SessionCard","getConfig","serverRuntimeConfig","publicRuntimeConfig","Session","GetSessionsUrl","process","env","RESTURL_SESSIONS_PROD","RESTURL_SESSIONS_DEV","getInitialProps","promise","get","then","response","hasErrored","sessionData","data","catch","error","messaage","message","constructor","props","state","render","map","session","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAM;AAACC,EAAAA,mBAAD;AAAsBC,EAAAA;AAAtB,IAA6CF,SAAS,EAA5D,C,CAEA;;AACA,MAAMG,OAAN,SAAsBN,SAAtB,CAAgC;AAC5B,SAAOO,cAAP,GAAwB;AACpB,eAA2C;AACvC,aAAOC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IACAL,mBAAmB,CAACK,qBAD3B;AAEH,KAHD,MAGO;AACH,aAAOF,OAAO,CAACC,GAAR,CAAYE,oBAAnB;AACH;AACJ;;AAED,eAAaC,eAAb,GAA+B;AAC3B;AACA,QAAIC,OAAO,GAAGZ,KAAK,CAACa,GAAN,CAAUR,OAAO,CAACC,cAAR,EAAV,EAAoCQ,IAApC,CAAyCC,QAAQ,IAAI;AAC/D,aAAO;AACHC,QAAAA,UAAU,EAAE,KADT;AAEHC,QAAAA,WAAW,EAAEF,QAAQ,CAACG;AAFnB,OAAP;AAIH,KALa,EAMTC,KANS,CAMHC,KAAK,IAAI;AACZ,aAAO;AACHJ,QAAAA,UAAU,EAAE,IADT;AAEHK,QAAAA,QAAQ,EAAED,KAAK,CAACE;AAFb,OAAP;AAIH,KAXS,CAAd;AAYA,WAAOV,OAAP;AACH;;AAEDW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTT,MAAAA,UAAU,EAAEQ,KAAK,CAACR,UADT;AAETM,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAFN;AAGTL,MAAAA,WAAW,EAAEO,KAAK,CAACP;AAHV,KAAb;AAKH;;AAEDS,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWR,WAAX,CAAuBU,GAAvB,CAA4BC,OAAD,IACxB;AAAK,MAAA,SAAS,EAAC,oCAAf;AAAoD,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAa,MAAA,OAAO,EAAED,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CADJ,CADJ,CADJ;AAaH;;AAnD2B;;AAoD/B;AAED,eAAevB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport SessionCard from '../src/SessionCard';\n\nimport getConfig from 'next/config';\nconst {serverRuntimeConfig, publicRuntimeConfig} = getConfig();\n\n// M4.6\nclass Session extends Component {\n    static GetSessionsUrl() {\n        if (process.env.NODE_ENV === \"production\") {\n            return process.env.RESTURL_SESSIONS_PROD\n                || publicRuntimeConfig.RESTURL_SESSIONS_PROD;\n        } else {\n            return process.env.RESTURL_SESSIONS_DEV;\n        }\n    }\n\n    static async getInitialProps() {\n        // REST calls using json-server\n        var promise = axios.get(Session.GetSessionsUrl()).then(response => {\n            return {\n                hasErrored: false,\n                sessionData: response.data\n            };\n        })\n            .catch(error => {\n                return {\n                    hasErrored: true,\n                    messaage: error.message\n                }\n            });\n        return promise;\n    }\n\n    constructor(props) {\n        super(props);\n        // Initializing state to axios call to db.json result data\n        this.state = {\n            hasErrored: props.hasErrored,\n            message: props.message,\n            sessionData: props.sessionData\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.sessionData.map((session) =>\n                            <div className=\"card col-4 cardmin margintopbottom\" key={session.id}>\n                                <SessionCard session={session} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Session;"]},"metadata":{},"sourceType":"module"}