{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/speakers.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport SpeakerCard from '../src/SpeakerCard';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    serverRuntimeConfig = _getConfig.serverRuntimeConfig,\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Speakers = /*#__PURE__*/function (_React$Component) {\n  _inherits(Speakers, _React$Component);\n\n  var _super = _createSuper(Speakers);\n\n  _createClass(Speakers, null, [{\n    key: \"GetSpeakersUrl\",\n    value: function GetSpeakersUrl() {\n      if (false) {\n        return process.env.RESTURL_SPEAKERS_PROD || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n      } else {\n        return process.env.RESTURL_SPEAKERS_DEV;\n      }\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var req, isServer, promise;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              req = _ref.req;\n              // REST calls using json-server\n              isServer = !!req;\n\n              if (!isServer) {\n                _context.next = 7;\n                break;\n              }\n\n              promise = axios.get(Speakers.GetSpeakersUrl()).then(function (response) {\n                return {\n                  isLoading: false,\n                  hasErrored: false,\n                  speakerData: response.data\n                };\n              })[\"catch\"](function (error) {\n                return {\n                  hasErrored: true,\n                  messaage: error.message\n                };\n              });\n              return _context.abrupt(\"return\", promise);\n\n            case 7:\n              return _context.abrupt(\"return\", {\n                speakerData: _toConsumableArray(Array(5)).map(function (_, i) {\n                  return {\n                    firstName: \"\",\n                    lastName: \"\",\n                    id: i\n                  };\n                }),\n                isLoading: true\n              });\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  function Speakers(props) {\n    var _this;\n\n    _classCallCheck(this, Speakers);\n\n    _this = _super.call(this, props); // Initializing state to axios call to db.json result data\n\n    _this.state = {\n      hasErrored: props.hasErrored,\n      message: props.message,\n      speakerData: props.speakerData\n    }; // console.log(props.speakerData);\n\n    return _this;\n  }\n\n  _createClass(Speakers, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      axios.get(Speakers.GetSpeakersUrl()).then(function (response) {\n        _this2.setState({\n          hasErrored: false,\n          isLoading: false,\n          speakerData: response.data\n        });\n      })[\"catch\"](function (error) {\n        _this2.setState({\n          hasErrored: true,\n          isLoading: false,\n          speakerData: []\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log('isLoading: ', this.state.isLoading);\n\n      if (this.state.isLoading) {\n        return __jsx(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 20\n          }\n        }, \"...is Loading\");\n      }\n\n      return __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: \"card-deck\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, this.state.speakerData.map(function (speaker) {\n        return __jsx(\"div\", {\n          className: \"card col-4 cardmin margintopbotton20\",\n          key: speaker.id,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }\n        }, __jsx(SpeakerCard, {\n          speaker: speaker,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return Speakers;\n}(React.Component);\n\n;\nexport default Speakers;","map":{"version":3,"sources":["/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/speakers.js"],"names":["React","axios","SpeakerCard","getConfig","serverRuntimeConfig","publicRuntimeConfig","Speakers","process","env","RESTURL_SPEAKERS_PROD","RESTURL_SPEAKERS_DEV","req","isServer","promise","get","GetSpeakersUrl","then","response","isLoading","hasErrored","speakerData","data","error","messaage","message","Array","map","_","i","firstName","lastName","id","props","state","setState","console","log","speaker","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport SpeakerCard from '../src/SpeakerCard';\n\nimport getConfig from 'next/config';\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig();\n\nclass Speakers extends React.Component {\n    static GetSpeakersUrl() {\n        if (process.env.NODE_ENV === \"production\") {\n            return process.env.RESTURL_SPEAKERS_PROD\n                || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n        } else {\n            return process.env.RESTURL_SPEAKERS_DEV;\n        }\n    }\n\n    static async getInitialProps({ req }) {\n        // REST calls using json-server\n        const isServer = !!req;\n        if (isServer) {\n            var promise = axios.get(Speakers.GetSpeakersUrl()).then(response => {\n                return {\n                    isLoading: false,\n                    hasErrored: false,\n                    speakerData: response.data\n                };\n            })\n                .catch(error => {\n                    return {\n                        hasErrored: true,\n                        messaage: error.message\n                    }\n                });\n            return promise;\n        }\n        else {\n            return {\n                speakerData: [...Array(5)].map((_, i) => ({\n                    firstName: \"\",\n                    lastName: \"\",\n                    id: i\n                })),\n                isLoading: true\n            };\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        // Initializing state to axios call to db.json result data\n        this.state = {\n            hasErrored: props.hasErrored,\n            message: props.message,\n            speakerData: props.speakerData\n        }\n        // console.log(props.speakerData);\n    }\n\n    componentDidMount() {\n        axios.get(Speakers.GetSpeakersUrl())\n            .then((response => {\n                this.setState({\n                    hasErrored: false,\n                    isLoading: false,\n                    speakerData: response.data\n                });\n            }))\n            .catch((error) => {\n                this.setState({\n                    hasErrored: true,\n                    isLoading: false,\n                    speakerData: []\n                });\n            });\n    }\n\n    render() {\n        console.log('isLoading: ', this.state.isLoading);\n        if (this.state.isLoading) {\n            return <div>...is Loading</div>\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.speakerData.map((speaker) =>\n                            <div className=\"card col-4 cardmin margintopbotton20\" key={speaker.id}>\n                                <SpeakerCard speaker={speaker} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}