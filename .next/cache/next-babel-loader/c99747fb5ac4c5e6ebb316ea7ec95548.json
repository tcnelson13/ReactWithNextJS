{"ast":null,"code":"var _jsxFileName = \"/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/speakers.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport axios from 'axios';\nimport SpeakerCard from '../src/SpeakerCard';\nimport getConfig from 'next/config';\nconst {\n  serverRuntimeConfig,\n  publicRuntimeConfig\n} = getConfig();\n\nclass Speakers extends React.Component {\n  static GetSpeakersUrl() {\n    if (false) {\n      return process.env.RESTURL_SPEAKERS_PROD || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n    } else {\n      return process.env.RESTURL_SPEAKERS_DEV;\n    }\n  }\n\n  static async getInitialProps() {\n    // REST calls using json-server\n    const isServer = !!req;\n\n    if (isServer) {\n      var promise = axios.get(Speakers.GetSpeakersUrl()).then(response => {\n        return {\n          isLoading: false,\n          hasErrored: false,\n          speakerData: response.data\n        };\n      }).catch(error => {\n        return {\n          hasErrored: true,\n          messaage: error.message\n        };\n      });\n      return promise;\n    } else {\n      return {\n        speakerData: [...Array(5)].map((_, i) => ({\n          firstName: \"\",\n          lastName: \"\",\n          id: i\n        })),\n        isLoading: true\n      };\n    }\n  }\n\n  constructor(props) {\n    super(props); // Initializing state to axios call to db.json result data\n\n    this.state = {\n      hasErrored: props.hasErrored,\n      message: props.message,\n      speakerData: props.speakerData\n    }; // console.log(props.speakerData);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"card-deck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, this.state.speakerData.map(speaker => __jsx(\"div\", {\n      className: \"card col-4 cardmin margintopbotton20\",\n      key: speaker.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, __jsx(SpeakerCard, {\n      speaker: speaker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}\n\n;\nexport default Speakers;","map":{"version":3,"sources":["/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/speakers.js"],"names":["React","axios","SpeakerCard","getConfig","serverRuntimeConfig","publicRuntimeConfig","Speakers","Component","GetSpeakersUrl","process","env","RESTURL_SPEAKERS_PROD","RESTURL_SPEAKERS_DEV","getInitialProps","isServer","req","promise","get","then","response","isLoading","hasErrored","speakerData","data","catch","error","messaage","message","Array","map","_","i","firstName","lastName","id","constructor","props","state","render","speaker"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAM;AAAEC,EAAAA,mBAAF;AAAuBC,EAAAA;AAAvB,IAA+CF,SAAS,EAA9D;;AAEA,MAAMG,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAuC;AACnC,SAAOC,cAAP,GAAwB;AACpB,eAA2C;AACvC,aAAOC,OAAO,CAACC,GAAR,CAAYC,qBAAZ,IACAN,mBAAmB,CAACM,qBAD3B;AAEH,KAHD,MAGO;AACH,aAAOF,OAAO,CAACC,GAAR,CAAYE,oBAAnB;AACH;AACJ;;AAED,eAAaC,eAAb,GAA+B;AAC3B;AACA,UAAMC,QAAQ,GAAG,CAAC,CAACC,GAAnB;;AACA,QAAID,QAAJ,EAAc;AACV,UAAIE,OAAO,GAAGf,KAAK,CAACgB,GAAN,CAAUX,QAAQ,CAACE,cAAT,EAAV,EAAqCU,IAArC,CAA0CC,QAAQ,IAAI;AAChE,eAAO;AACHC,UAAAA,SAAS,EAAE,KADR;AAEHC,UAAAA,UAAU,EAAE,KAFT;AAGHC,UAAAA,WAAW,EAAEH,QAAQ,CAACI;AAHnB,SAAP;AAKH,OANa,EAOTC,KAPS,CAOHC,KAAK,IAAI;AACZ,eAAO;AACHJ,UAAAA,UAAU,EAAE,IADT;AAEHK,UAAAA,QAAQ,EAAED,KAAK,CAACE;AAFb,SAAP;AAIH,OAZS,CAAd;AAaA,aAAOX,OAAP;AACH,KAfD,MAgBK;AACD,aAAO;AACHM,QAAAA,WAAW,EAAE,CAAC,GAAGM,KAAK,CAAC,CAAD,CAAT,EAAcC,GAAd,CAAkB,CAACC,CAAD,EAAIC,CAAJ,MAAW;AACtCC,UAAAA,SAAS,EAAE,EAD2B;AAEtCC,UAAAA,QAAQ,EAAE,EAF4B;AAGtCC,UAAAA,EAAE,EAAEH;AAHkC,SAAX,CAAlB,CADV;AAMHX,QAAAA,SAAS,EAAE;AANR,OAAP;AASH;AACJ;;AAEDe,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACThB,MAAAA,UAAU,EAAEe,KAAK,CAACf,UADT;AAETM,MAAAA,OAAO,EAAES,KAAK,CAACT,OAFN;AAGTL,MAAAA,WAAW,EAAEc,KAAK,CAACd;AAHV,KAAb,CAHe,CAQf;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKD,KAAL,CAAWf,WAAX,CAAuBO,GAAvB,CAA4BU,OAAD,IACxB;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAsD,MAAA,GAAG,EAAEA,OAAO,CAACL,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,WAAD;AAAa,MAAA,OAAO,EAAEK,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,CADL,CADJ,CADJ,CADJ;AAaH;;AAnEkC;;AAoEtC;AAED,eAAejC,QAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport SpeakerCard from '../src/SpeakerCard';\n\nimport getConfig from 'next/config';\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig();\n\nclass Speakers extends React.Component {\n    static GetSpeakersUrl() {\n        if (process.env.NODE_ENV === \"production\") {\n            return process.env.RESTURL_SPEAKERS_PROD\n                || publicRuntimeConfig.RESTURL_SPEAKERS_PROD;\n        } else {\n            return process.env.RESTURL_SPEAKERS_DEV;\n        }\n    }\n\n    static async getInitialProps() {\n        // REST calls using json-server\n        const isServer = !!req;\n        if (isServer) {\n            var promise = axios.get(Speakers.GetSpeakersUrl()).then(response => {\n                return {\n                    isLoading: false,\n                    hasErrored: false,\n                    speakerData: response.data\n                };\n            })\n                .catch(error => {\n                    return {\n                        hasErrored: true,\n                        messaage: error.message\n                    }\n                });\n            return promise;\n        }\n        else {\n            return {\n                speakerData: [...Array(5)].map((_, i) => ({\n                    firstName: \"\",\n                    lastName: \"\",\n                    id: i\n                })),\n                isLoading: true\n            };\n\n        }\n    }\n\n    constructor(props) {\n        super(props);\n        // Initializing state to axios call to db.json result data\n        this.state = {\n            hasErrored: props.hasErrored,\n            message: props.message,\n            speakerData: props.speakerData\n        }\n        // console.log(props.speakerData);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"card-deck\">\n                        {this.state.speakerData.map((speaker) =>\n                            <div className=\"card col-4 cardmin margintopbotton20\" key={speaker.id}>\n                                <SpeakerCard speaker={speaker} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n};\n\nexport default Speakers;"]},"metadata":{},"sourceType":"module"}