{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/speaker.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport getConfig from 'next/config';\n\nvar _getConfig = getConfig(),\n    serverRuntimeConfig = _getConfig.serverRuntimeConfig,\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nvar Speaker = /*#__PURE__*/function (_Component) {\n  _inherits(Speaker, _Component);\n\n  var _super = _createSuper(Speaker);\n\n  function Speaker() {\n    _classCallCheck(this, Speaker);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Speaker, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        className: \"margintopbottom20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, this.props.speakerDataOne.firstName, \" \", this.props.speakerDataOne.lastName), __jsx(\"p\", {\n        className: \"margintopbottom20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, this.props.speakerDataOne.bio)));\n    }\n  }], [{\n    key: \"GetSpeakerUrl\",\n    value: function GetSpeakerUrl() {\n      if (false) {\n        return process.env.RESTURL_SPEAKER_PROD || publicRuntimeConfig.RESTURL_SPEAKER_PROD;\n      } else {\n        return process.env.RESTURL_SPEAKER_DEV;\n      }\n    }\n  }, {\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var query, promise;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = _ref.query;\n              promise = axios.get(\"\".concat(Speaker.GetSpeakerUrl(), \"/\").concat(query.speakerId)).then(function (response) {\n                return {\n                  hasErrored: false,\n                  speakerDataOne: response.data\n                };\n              })[\"catch\"](function (error) {\n                return {\n                  hasErrored: false,\n                  message: error.message\n                };\n              });\n              return _context.abrupt(\"return\", promise);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }]);\n\n  return Speaker;\n}(Component);\n\nexport default Speaker;","map":{"version":3,"sources":["/Users/tnelson/Documents/Self Study/Pluralsight/ReactWithNextJS/FinalOptimizedNextJS/pages/speaker.js"],"names":["React","Component","axios","getConfig","serverRuntimeConfig","publicRuntimeConfig","Speaker","props","speakerDataOne","firstName","lastName","bio","process","env","RESTURL_SPEAKER_PROD","RESTURL_SPEAKER_DEV","query","promise","get","GetSpeakerUrl","speakerId","then","response","hasErrored","data","error","message"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;iBACqDA,SAAS,E;IAAtDC,mB,cAAAA,mB;IAAqBC,mB,cAAAA,mB;;IAEvBC,O;;;;;;;;;;;;;6BA0BO;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,mBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,KAAL,CAAWC,cAAX,CAA0BC,SAD/B,OAC2C,KAAKF,KAAL,CAAWC,cAAX,CAA0BE,QADrE,CADJ,EAII;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKH,KAAL,CAAWC,cAAX,CAA0BG,GAD/B,CAJJ,CADJ,CADJ;AAYH;;;oCAtCsB;AACnB,iBAA2C;AACvC,eAAOC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,IACAT,mBAAmB,CAACS,oBAD3B;AAEH,OAHD,MAGO;AACH,eAAOF,OAAO,CAACC,GAAR,CAAYE,mBAAnB;AACH;AACJ;;;;;;;;;AAE8BC,cAAAA,K,QAAAA,K;AACvBC,cAAAA,O,GAAUf,KAAK,CAACgB,GAAN,WAAaZ,OAAO,CAACa,aAAR,EAAb,cAAwCH,KAAK,CAACI,SAA9C,GAA2DC,IAA3D,CACV,UAAAC,QAAQ,EAAI;AACR,uBAAO;AACHC,kBAAAA,UAAU,EAAE,KADT;AAEHf,kBAAAA,cAAc,EAAEc,QAAQ,CAACE;AAFtB,iBAAP;AAIH,eANS,WAMD,UAAAC,KAAK,EAAI;AACd,uBAAO;AACHF,kBAAAA,UAAU,EAAE,KADT;AAEHG,kBAAAA,OAAO,EAAED,KAAK,CAACC;AAFZ,iBAAP;AAIH,eAXS,C;+CAYPT,O;;;;;;;;;;;;EAvBOhB,S;;AA0CtB,eAAeK,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport getConfig from 'next/config';\nconst { serverRuntimeConfig, publicRuntimeConfig } = getConfig();\n\nclass Speaker extends Component {\n    static GetSpeakerUrl() {\n        if (process.env.NODE_ENV === \"production\") {\n            return process.env.RESTURL_SPEAKER_PROD\n                || publicRuntimeConfig.RESTURL_SPEAKER_PROD;\n        } else {\n            return process.env.RESTURL_SPEAKER_DEV;\n        }\n    }\n\n    static async getInitialProps({ query }) {\n        var promise = axios.get(`${Speaker.GetSpeakerUrl()}/${query.speakerId}`).then(\n            response => {\n                return {\n                    hasErrored: false,\n                    speakerDataOne: response.data\n                };\n            }).catch(error => {\n                return {\n                    hasErrored: false,\n                    message: error.message\n                }\n            });\n        return promise;\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h2 className=\"margintopbottom20\">\n                        {this.props.speakerDataOne.firstName} {this.props.speakerDataOne.lastName}\n                    </h2>\n                    <p className=\"margintopbottom20\">\n                        {this.props.speakerDataOne.bio}\n                    </p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Speaker;"]},"metadata":{},"sourceType":"module"}